{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/notfound/notfound.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","loadChildren","m","SurveyModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","template","styles","AppModule","production","declarations","providers","bootstrap","HomeComponent","httpClient","templateUrl","styleUrls","NotFound","environment","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,MAFb;AAGEC,gBAAU,EAAE;AAHd,KADqB,EAMrB;AACEF,UAAI,EAAE,MADR;AAEEG,eAAS,EAAE;AAFb,KANqB,EAUrB;AACEH,UAAI,EAAE,QADR;AAEEI,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,yDAA4Cb,IAA5C,CAAiD,UAAAc,CAAC;AAAA,iBAAIA,CAAC,CAACC,YAAN;AAAA,SAAlD,CAAN;AAAA,OAFhB,CAGE;AACA;;AAJF,KAVqB,EAgBrB;AAAEN,UAAI,EAAE,IAAR;AAAcG,eAAS,EAAE;AAAzB,KAhBqB,CAAvB;;QAuBaI,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBT,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBQ,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBT,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AC9B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAeaa,Y,GAbb;AAAA;;AAcE,WAAAC,KAAA,GAAQ,SAAR;AAED,K;;;uBAHYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,mpB;AAAA;AAAA;AAXZ;;AACT;;AAAkI;;AAAI;;AACtI;;AAAoI;;AAAM;;AAC1I;;AAAyI;;AAAI;;AAC7I;;AAAyI;;AAAK;;AAC9I;;AAAsK;;AAAK;;AAC3K;;AACA;;;;AAFkC;;AAAA;;;;;;;;;sEAMzBA,Y,EAAY;cAbxB,uDAawB;eAbd;AACTE,kBAAQ,EAAE,UADD;AAETC,kBAAQ,i5BAFC;AAWTC,gBAAM,EAAE;AAXC,S;AAac,Q;;;;;;;;;;;;;;;;;;ACfzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,yC,CAgBA;;;QAqBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,4FAJO,EAKP,4DALO,EAMP;AACA,6EAAYC,UAAZ,GAAyB,EAAzB,GAA8B,0EAPvB,CASI;;;;0HAGFD,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,gFAgBkB,EAflB,6EAekB;AAfL,kBAIb,uEAJa,EAKb,oEALa,EAMb,qEANa,EAOb,4FAPa,EAQb,4DARa,EAUiB,0EAVjB;AAeK,O;AAL2B,K;;;;;sEAKpCA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,6EAHY,CADN;AAORR,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,4FAJO,EAKP,4DALO,EAMP;AACA,iFAAYO,UAAZ,GAAyB,EAAzB,GAA8B,0EAPvB,CAPD;AAgBRE,mBAAS,EAAE,EAhBH;AAiBRC,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;ACrCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uE,CAMA;AACA;AACA;AACA;AACA;;;QAOaC,a;AAEX;AAEA,6BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;mCAEpC,CAET;AAEA;AACA;AAGD;;;;;;;uBAdUD,a,EAAa,gI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,yI;AAAA;AAAA;ACjB1B;;AAAG;;AAAI;;AAEP;;AAEA;;AAGA;;AACI;;AACI;;AAAyB;;AAAW;;AACxC;;AACJ;;;;AAH8C;;AAAA;;;;;;;;;sEDSjCA,a,EAAa;cALzB,uDAKyB;eALf;AACTR,kBAAQ,EAAE,UADD;AAETU,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AEjB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,Q;;;;;uBAAAA,Q;AAAQ,K;;;YAARA,Q;AAAQ,+B;AAAA,c;AAAA,a;AAAA;AAAA;AAFR;;AAAI;;AAAG;;;;;;;;sEAEPA,Q,EAAQ;cAJpB,uDAIoB;eAJV;AACTZ,kBAAQ,EAAE,UADD;AAETC,kBAAQ,EAAE;AAFD,S;AAIU,Q;;;;;;;;;;;;;;;;;;ACNrB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMY,WAAW,GAAG;AACzBT,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBU,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { NotFound } from './components/notfound/notfound.component';\nimport { SurveyComponent } from './components/survey/survey.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'survey',\n    loadChildren: () => import('./components/survey/survey.module').then(m => m.SurveyModule)\n    // component: SurveyComponent\n    // , data: { state: 'survey' }\n  },\n  { path: '**', component: NotFound }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<div class=\"p-8 m-8\">\n    <button routerLink=\"/home\" routerLinkActive=\"active\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Home</button>\n    <button routerLink=\"/survey\" routerLinkActive=\"active\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Survey</button>\n    <button routerLink=\"/survey/quiz\" routerLinkActive=\"active\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">quiz</button>\n    <button routerLink=\"/survey/quiz\" routerLinkActive=\"active\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">quiz1</button>\n    <button routerLink=\"/survey/quiz\" [queryParams]=\"{ page: 99 }\" routerLinkActive=\"active\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">quiz2</button>\n    <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [],\n})\nexport class AppComponent {\n  title = 'fwizapp';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { AppComponent } from './app.component';\n\nimport { NotFound } from './components/notfound/notfound.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SurveyModule } from './components/survey/survey.module';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { environment } from '../environments/environment';\n\n// import { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFound,\n    HomeComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    // SurveyModule,\n    environment.production ? [] : AkitaNgDevtools\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n// class Customer {\n//   id: number;\n//   name: string;\n//   nodes: [];\n// }\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // customersObservable: Observable<Customer[]>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit() {\n\n    // this.customersObservable = this.httpClient.get<Customer[]>(\"http://localhost:3000/surveys\").pipe(tap(entities => {\n\n    // }));\n    // this.customersObservable.subscribe(res => console.log(res));\n\n\n  }\n}\n","<p>home</p>\n<!-- <button routerLink=\"/survey?name=popular\">survey</button> -->\n<br>\n<!-- <a [routerLink]=\"['/survey']\" [queryParams]=\"{ name: 'popular'}\">survey </a> -->\n<br>\n<!-- <a [routerLink]=\"['/survey']\" [queryParams]=\"{ name: 'new' }\" queryParamsHandling=\"merge\">survey</a> -->\n\n<div style=\"position: relative; height: 444px;\">\n    <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.6)\" [fullScreen]=\"true\">\n        <p style=\"color: white\"> Loading... </p>\n    </ngx-spinner>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'notfound',\n  template: '<h1>404</h1>',\n})\nexport class NotFound { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}